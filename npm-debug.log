0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@1.4.14
3 info using node@v0.10.29
4 verbose node symlink C:\Program Files\nodejs\\node.exe
5 verbose publish [ '.' ]
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . C:\Users\jeakeyliang\AppData\Roaming\npm-cache\3a52ce78-.lock
11 verbose tar pack [ 'C:\\Users\\jeakeyliang\\AppData\\Roaming\\npm-cache\\grunt-jinja-extend\\0.3.0\\package.tgz',
11 verbose tar pack   '.' ]
12 verbose tarball C:\Users\jeakeyliang\AppData\Roaming\npm-cache\grunt-jinja-extend\0.3.0\package.tgz
13 verbose folder .
14 info prepublish grunt-jinja-extend@0.3.0
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. C:\Users\jeakeyliang\AppData\Roaming\npm-cache\1f1177db-tar.lock
17 silly lockFile 43a24b90-t-jinja-extend-0-3-0-package-tgz tar://C:\Users\jeakeyliang\AppData\Roaming\npm-cache\grunt-jinja-extend\0.3.0\package.tgz
18 verbose lock tar://C:\Users\jeakeyliang\AppData\Roaming\npm-cache\grunt-jinja-extend\0.3.0\package.tgz C:\Users\jeakeyliang\AppData\Roaming\npm-cache\43a24b90-t-jinja-extend-0-3-0-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 43a24b90-t-jinja-extend-0-3-0-package-tgz tar://C:\Users\jeakeyliang\AppData\Roaming\npm-cache\grunt-jinja-extend\0.3.0\package.tgz
22 silly lockFile 43a24b90-t-jinja-extend-0-3-0-package-tgz tar://C:\Users\jeakeyliang\AppData\Roaming\npm-cache\grunt-jinja-extend\0.3.0\package.tgz
23 silly lockFile 02c7e991-grunt-jinja-extend-0-3-0-package C:\Users\jeakeyliang\AppData\Roaming\npm-cache\grunt-jinja-extend\0.3.0\package
24 verbose lock C:\Users\jeakeyliang\AppData\Roaming\npm-cache\grunt-jinja-extend\0.3.0\package C:\Users\jeakeyliang\AppData\Roaming\npm-cache\02c7e991-grunt-jinja-extend-0-3-0-package.lock
25 silly lockFile 02c7e991-grunt-jinja-extend-0-3-0-package C:\Users\jeakeyliang\AppData\Roaming\npm-cache\grunt-jinja-extend\0.3.0\package
26 silly lockFile 02c7e991-grunt-jinja-extend-0-3-0-package C:\Users\jeakeyliang\AppData\Roaming\npm-cache\grunt-jinja-extend\0.3.0\package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'grunt-jinja-extend',
29 silly publish   description: 'A grunt plugin for compiling Jinja2 templates with nunjucks.',
29 silly publish   version: '0.3.0',
29 silly publish   homepage: 'https://github.com/jeakey/grunt-jinja-extend',
29 silly publish   author: { name: 'jeakey', email: 'june_fh@qq.com' },
29 silly publish   repository:
29 silly publish    { type: 'git',
29 silly publish      url: 'https://github.com/jeakey/grunt-jinja-extend.git' },
29 silly publish   bugs: { url: 'https://github.com/jeakey/grunt-jinja-extend/issues' },
29 silly publish   licenses:
29 silly publish    [ { type: 'MIT',
29 silly publish        url: 'https://github.com/jeakey/grunt-jinja-extend/blob/master/LICENSE' } ],
29 silly publish   main: 'Gruntfile.coffee',
29 silly publish   engines: { node: '>= 0.8.0' },
29 silly publish   scripts: { test: 'grunt test' },
29 silly publish   devDependencies:
29 silly publish    { 'grunt-contrib-clean': '~0.4.0',
29 silly publish      'grunt-contrib-nodeunit': '~0.2.0',
29 silly publish      grunt: '~0.4.1' },
29 silly publish   peerDependencies: { grunt: '~0.4.1' },
29 silly publish   keywords: [ 'gruntplugin' ],
29 silly publish   dependencies: { nunjucks: '~0.1.10' },
29 silly publish   _id: 'grunt-jinja-extend@0.3.0',
29 silly publish   dist:
29 silly publish    { shasum: 'c3bdff5def6d61048ce4ef088ef617ee08cd97fb',
29 silly publish      tarball: 'http://npm.oa.com/grunt-jinja/-/grunt-jinja-0.3.0.tgz' },
29 silly publish   _from: '.',
29 silly publish   _npmVersion: '1.3.5',
29 silly publish   _npmUser: { name: 'matthewwithanm', email: 'm@tthewwithanm.com' },
29 silly publish   maintainers: [ { name: 'matthewwithanm', email: 'm@tthewwithanm.com' } ],
29 silly publish   directories: {},
29 silly publish   _shasum: 'bc80f45c2bef49a3dcae6b0b7fc229b70dfbc32a',
29 silly publish   _resolved: 'http://npm.oa.com/grunt-jinja/-/grunt-jinja-extend-0.3.0.tgz',
29 silly publish   readme: '# grunt-jinja\n\n> A grunt plugin for compiling Jinja2 templates with James Long\'s awesome\n> [nunjucks templating system][nunjucks].\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven\'t used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you\'re familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-jinja --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks(\'grunt-jinja\');\n```\n\n## The "jinja" task\n\n### Overview\nIn your project\'s Gruntfile, add a section named `jinja` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  jinja: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.templateDirs\nType: `Array`\nDefault value: `[path.join(process.cwd(), \'templates\')]`\n\nA an array of paths in which your templates can be found. If not provided, this\nwill default to the "templates" directory at the same level as your Gruntfile.\n\n#### options.contextRoot\nType: `String`\nDefault value: `path.join(process.cwd(), \'template-context\')`\n\nThe directory in which your template context files can be found. grunt-jinja\nwill look in this directory to find JSON documents or node modules that\ncorrespond to your template names and use them for that template. For example,\nif you use a template "products/phones.html", you can create a\n"products/phones.json" or "products/phones.js" file in the context root and it\nwill be used as context when rendering the template. To add context to all of\nyour templates, create an "_all.json" or "_all.js" file in the context root.\n\n#### options.filters\nType: `Object`\nDefault value: `{}`\n\nAn object whose keys are filter names and values are functions. Each pair will\nbe registered with the template environment using the [addFilter][] method.\n\n### Other options\n\nOther options are passed directly to the [nunjucks environment object][1].\nCurrently, valid options are as follows:\n\n#### options.dev\nType: `Boolean`\nDefault value: `false`\n\nA boolean which, if true, puts nunjucks into development mode which means that\nerror stack traces will not be cleaned up.\n\n### options.autoescape\nType: `Boolean`\nDefault value: `true`\n\nA boolean which, if true, will escape all output by default See\n[Autoescaping][2].\n\n### options.tags\nType: `Object`\nDefault value: {}\n\nAn object specifying custom block start and end tags. See [Customizing Variable\nand Block Tags][3].\n\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to compile a templates in the\n"templates/" directory to the "built" directory:\n\n```js\ngrunt.initConfig({\n  jinja: {\n    files: {\n      \'built/index.html\': \'templates/index.html\'\n    },\n  },\n})\n```\n\nThis example compiles all templates that don\'t begin with an underscore:\n\n```js\ngrunt.initConfig({\n  jinja: {\n    dist: {\n      files: [{\n        expand: true,\n        dest: \'built/\',\n        cwd: \'templates/\',\n        src: [\'**/!(_)*.html\']\n      }]\n    }\n  }\n})\n```\n\n#### Custom Options\nIn this example, custom options are used to load the templates from directories\nother than "templates":\n\n```js\ngrunt.initConfig({\n  jinja: {\n    dist: {\n      options: {\n        templateDirs: [\'src/templates\']\n      },\n      files: {\n        \'built/index.html\': \'src/templates/index.html\'\n      }\n    }\n  }\n})\n```\n\n[nunjucks]: https://github.com/jlongster/nunjucks\n[1]: http://nunjucks.jlongster.com/api#Environment\n[2]: http://nunjucks.jlongster.com/api#Autoescaping\n[3]: http://nunjucks.jlongster.com/api#Customizing-Variable-and-Block-Tags\n[addFilter]: http://nunjucks.jlongster.com/api#Custom-Filters\n',
29 silly publish   readmeFilename: 'README.md',
29 silly publish   gitHead: '32853b2b4bedf813124e9675e81c216b8f7e8f11' }
30 verbose url raw grunt-jinja-extend
31 verbose url resolving [ 'http://npm.oa.com/', './grunt-jinja-extend' ]
32 verbose url resolved http://npm.oa.com/grunt-jinja-extend
33 info trying registry request attempt 1 at 16:16:14
34 http PUT http://npm.oa.com/grunt-jinja-extend
35 http 403 http://npm.oa.com/grunt-jinja-extend
36 verbose headers { server: 'nginx/1.0.15',
36 verbose headers   date: 'Mon, 29 Jun 2015 08:16:14 GMT',
36 verbose headers   'content-type': 'application/json',
36 verbose headers   connection: 'keep-alive',
36 verbose headers   'content-length': '8000',
36 verbose headers   'cache-control': 'must-revalidate' }
37 error publish Failed PUT 403
38 error Error: forbidden cannot modify pre-existing version: 0.3.0
38 error old={"name":"grunt-jinja-extend","description":"A grunt plugin for compiling Jinja2 templates with nunjucks.","version":"0.3.0","homepage":"https://github.com/jeakey/grunt-jinja-extend","author":{"name":"jeakey","email":"june_fh@qq.com"},"repository":{"type":"git","url":"https://github.com/jeakey/grunt-jinja-extend.git"},"bugs":{"url":"https://github.com/jeakey/grunt-jinja-extend/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jeakey/grunt-jinja-extend/blob/master/LICENSE"}],"main":"Gruntfile.coffee","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.2.0","grunt":"~0.4.1"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"dependencies":{"nunjucks":"~0.1.10"},"_id":"grunt-jinja-extend@0.3.0","dist":{"shasum":"bc80f45c2bef49a3dcae6b0b7fc229b70dfbc32a","tarball":"http://npm.oa.com/grunt-jinja-extend/-/grunt-jinja-extend-0.3.0.tgz"},"_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"jeakey","email":"june_fh@qq.com"},"maintainers":[{"name":"jeakey","email":"june_fh@qq.com"}],"directories":{},"_shasum":"bc80f45c2bef49a3dcae6b0b7fc229b70dfbc32a","_resolved":"http://npm.oa.com/grunt-jinja/-/grunt-jinja-extend-0.3.0.tgz","gitHead":"32853b2b4bedf813124e9675e81c216b8f7e8f11"}
38 error new={"name":"grunt-jinja-extend","description":"A grunt plugin for compiling Jinja2 templates with nunjucks.","version":"0.3.0","homepage":"https://github.com/jeakey/grunt-jinja-extend","author":{"name":"jeakey","email":"june_fh@qq.com"},"repository":{"type":"git","url":"https://github.com/jeakey/grunt-jinja-extend.git"},"bugs":{"url":"https://github.com/jeakey/grunt-jinja-extend/issues"},"licenses":[{"type":"MIT","url":"https://github.com/jeakey/grunt-jinja-extend/blob/master/LICENSE"}],"main":"Gruntfile.coffee","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.2.0","grunt":"~0.4.1"},"peerDependencies":{"grunt":"~0.4.1"},"keywords":["gruntplugin"],"dependencies":{"nunjucks":"~0.1.10"},"_id":"grunt-jinja-extend@0.3.0","dist":{"shasum":"bc80f45c2bef49a3dcae6b0b7fc229b70dfbc32a","tarball":"http://npm.oa.com/grunt-jinja-extend/-/grunt-jinja-extend-0.3.0.tgz"},"_from":".","_npmVersion":"1.4.14","_npmUser":{"name":"jeakey","email":"june_fh@qq.com"},"maintainers":[{"name":"jeakey","email":"june_fh@qq.com"}],"directories":{},"_shasum":"bc80f45c2bef49a3dcae6b0b7fc229b70dfbc32a","_resolved":"http://npm.oa.com/grunt-jinja/-/grunt-jinja-extend-0.3.0.tgz","readme":"# grunt-jinja\u000a\u000a> A grunt plugin for compiling Jinja2 templates with James Long's awesome\u000a> [nunjucks templating system][nunjucks].\u000a\u000a## Getting Started\u000aThis plugin requires Grunt `~0.4.1`\u000a\u000aIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\u000a\u000a```shell\u000anpm install grunt-jinja --save-dev\u000a```\u000a\u000aOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\u000a\u000a```js\u000agrunt.loadNpmTasks('grunt-jinja');\u000a```\u000a\u000a## The \"jinja\" task\u000a\u000a### Overview\u000aIn your project's Gruntfile, add a section named `jinja` to the data object passed into `grunt.initConfig()`.\u000a\u000a```js\u000agrunt.initConfig({\u000a  jinja: {\u000a    options: {\u000a      // Task-specific options go here.\u000a    },\u000a    your_target: {\u000a      // Target-specific file lists and/or options go here.\u000a    },\u000a  },\u000a})\u000a```\u000a\u000a### Options\u000a\u000a#### options.templateDirs\u000aType: `Array`\u000aDefault value: `[path.join(process.cwd(), 'templates')]`\u000a\u000aA an array of paths in which your templates can be found. If not provided, this\u000awill default to the \"templates\" directory at the same level as your Gruntfile.\u000a\u000a#### options.contextRoot\u000aType: `String`\u000aDefault value: `path.join(process.cwd(), 'template-context')`\u000a\u000aThe directory in which your template context files can be found. grunt-jinja\u000awill look in this directory to find JSON documents or node modules that\u000acorrespond to your template names and use them for that template. For example,\u000aif you use a template \"products/phones.html\", you can create a\u000a\"products/phones.json\" or \"products/phones.js\" file in the context root and it\u000awill be used as context when rendering the template. To add context to all of\u000ayour templates, create an \"_all.json\" or \"_all.js\" file in the context root.\u000a\u000a#### options.filters\u000aType: `Object`\u000aDefault value: `{}`\u000a\u000aAn object whose keys are filter names and values are functions. Each pair will\u000abe registered with the template environment using the [addFilter][] method.\u000a\u000a### Other options\u000a\u000aOther options are passed directly to the [nunjucks environment object][1].\u000aCurrently, valid options are as follows:\u000a\u000a#### options.dev\u000aType: `Boolean`\u000aDefault value: `false`\u000a\u000aA boolean which, if true, puts nunjucks into development mode which means that\u000aerror stack traces will not be cleaned up.\u000a\u000a### options.autoescape\u000aType: `Boolean`\u000aDefault value: `true`\u000a\u000aA boolean which, if true, will escape all output by default See\u000a[Autoescaping][2].\u000a\u000a### options.tags\u000aType: `Object`\u000aDefault value: {}\u000a\u000aAn object specifying custom block start and end tags. See [Customizing Variable\u000aand Block Tags][3].\u000a\u000a\u000a### Usage Examples\u000a\u000a#### Default Options\u000aIn this example, the default options are used to compile a templates in the\u000a\"templates/\" directory to the \"built\" directory:\u000a\u000a```js\u000agrunt.initConfig({\u000a  jinja: {\u000a    files: {\u000a      'built/index.html': 'templates/index.html'\u000a    },\u000a  },\u000a})\u000a```\u000a\u000aThis example compiles all templates that don't begin with an underscore:\u000a\u000a```js\u000agrunt.initConfig({\u000a  jinja: {\u000a    dist: {\u000a      files: [{\u000a        expand: true,\u000a        dest: 'built/',\u000a        cwd: 'templates/',\u000a        src: ['**/!(_)*.html']\u000a      }]\u000a    }\u000a  }\u000a})\u000a```\u000a\u000a#### Custom Options\u000aIn this example, custom options are used to load the templates from directories\u000aother than \"templates\":\u000a\u000a```js\u000agrunt.initConfig({\u000a  jinja: {\u000a    dist: {\u000a      options: {\u000a        templateDirs: ['src/templates']\u000a      },\u000a      files: {\u000a        'built/index.html': 'src/templates/index.html'\u000a      }\u000a    }\u000a  }\u000a})\u000a```\u000a\u000a[nunjucks]: https://github.com/jlongster/nunjucks\u000a[1]: http://nunjucks.jlongster.com/api#Environment\u000a[2]: http://nunjucks.jlongster.com/api#Autoescaping\u000a[3]: http://nunjucks.jlongster.com/api#Customizing-Variable-and-Block-Tags\u000a[addFilter]: http://nunjucks.jlongster.com/api#Custom-Filters\u000a","readmeFilename":"README.md","gitHead":"32853b2b4bedf813124e9675e81c216b8f7e8f11"}: grunt-jinja-extend
38 error     at RegClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:274:14)
38 error     at Request._callback (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:212:65)
38 error     at Request.self.callback (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:123:22)
38 error     at Request.emit (events.js:98:17)
38 error     at Request.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:893:14)
38 error     at Request.emit (events.js:117:20)
38 error     at IncomingMessage.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:844:12)
38 error     at IncomingMessage.emit (events.js:117:20)
38 error     at _stream_readable.js:929:16
38 error     at process._tickCallback (node.js:419:13)
39 error If you need help, you may report this *entire* log,
39 error including the npm and node versions, at:
39 error     <http://github.com/npm/npm/issues>
40 error System Windows_NT 6.1.7601
41 error command "C:\\Program Files\\nodejs\\\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
42 error cwd G:\imgcache\github\grunt-jinja-extend
43 error node -v v0.10.29
44 error npm -v 1.4.14
45 verbose exit [ 1, true ]
